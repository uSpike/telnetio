name: CI
on:
  push:
    branches:
      - main
  pull_request:

env:
  POETRY_VERSION: 1.3.2

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v4.0.1
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v4.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4.0.1
        with:
          path: ${{ github.workspace }}/.venv
          key: ${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        if: steps.cache-deps.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction -E anyio

      - name: Run tests
        run: poetry run pytest -v
  lint:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v4.0.1
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v4.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4.0.1
        with:
          path: ${{ github.workspace }}/.venv
          key: ${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        if: steps.cache-deps.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction -E anyio

      - run: pip install pre-commit==4.0.1
      - run: pre-commit install-hooks
      - run: pre-commit run -a
