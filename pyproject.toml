[tool.poetry]
name = "telnetio"
version = "0.3.0"
description = "Sans-IO telnet parser"
authors = ["Jordan Speicher <jordan@jspeicher.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/uSpike/telnetio"
packages = [
    { include = "telnetio", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.6.2"
anyio = {version = "^3.2.0", optional = true}
dataclasses = {version = "^0.8", python = "3.6"}
async_generator = {version = "^1.10", python = "3.6", optional = true}

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
mypy = "^0.910"
pre-commit = "^2.13.0"
pytest-cov = "^2.12.1"

[tool.poetry.extras]
anyio = ["anyio", "async_generator"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.9"
strict = true
show_column_numbers = true
show_error_codes = true

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120

[tool.flakehell]
format = "colored"
show_source = true
max_line_length = 120
extended_default_ignore=[]  # https://github.com/flakehell/flakehell/issues/10

[tool.flakehell.plugins]
# Ignore redefinition of variable name in new scope
pyflakes = ["+*", "-F823"]
flake8-bandit = ["+*"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-darglint = ["+*"]
flake8-docstrings = ["+*"]
flake8-eradicate = ["+*"]
flake8-mutable = ["+*"]
flake8-pytest-style = ["+*"]
flake8-spellcheck = ["+*"]

[tool.flakehell.exceptions."**/__init__.py"]
# Ignore unused imports in __init__.py files
pyflakes = ["-F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=src --cov-report=term-missing --no-cov-on-fail"
